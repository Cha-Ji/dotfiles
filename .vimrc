" DO NOT EDIT THIS FILE
" Add your own customizations in ~/.vim_runtime/my_configs.vim

set runtimepath+=~/.vim_runtime
set runtimepath+=~/.vim/bundle/Vundle.vim/

call vundle#begin()
Plugin 'VundleVim/Vundle.vim' " required
Plugin 'scrooloose/nerdtree'
Plugin 'http://github.com/tpope/vim-fugitive'
Plugin 'blueyed/vim-diminactive'
Plugin 'bling/vim-airline'
Plugin 'http://github.com/kien/ctrlp.vim'
Plugin 'rking/ag.vim'
Plugin 'preservim/nerdcommenter'
Plugin 'FuzzyFinder'
Plugin 'Lokaltog/vim-easymotion'
Plugin 'terryma/vim-multiple-cursors'
Plugin 'matchit.zip'
Plugin 'tpope/vim-repeat'
Plugin 'tpope/vim-abolish'
Plugin 'Yggdroot/indentLine'
Plugin 'LeafCage/yankround.vim'
Plugin 'vim-jp/vital.vim'
Plugin 'mhinz/vim-signify'
Plugin 'plasticboy/vim-markdown'
Plugin 'peterrincker/vim-argumentative'
Plugin 'KabbAmine/vCoolor.vim'
Plugin 'elzr/vim-json'
Plugin 'wincent/ferret'
Plugin 'L9' " python required
call vundle#end()

source ~/.vim_runtime/vimrcs/basic.vim
source ~/.vim_runtime/vimrcs/filetypes.vim
source ~/.vim_runtime/vimrcs/plugins_config.vim
source ~/.vim_runtime/vimrcs/extended.vim
try
  source ~/.vim_runtime/my_configs.vim
catch
endtry

" Colorscheme
set background=dark
colorscheme onedark

" \ to ,
let mapleader = ","

" map navigation & nerd tree
map <leader>nt <ESC>:NERDTree<CR>
let NERDTreeShowHidden=1
nmap <C-H> <C-W>h
nmap <C-J> <C-W>j
nmap <C-K> <C-W>k
nmap <C-L> <C-W>l
 
"" move lines
nnoremap <down> :m .+1<CR>==
nnoremap <up> :m .-2<CR>==

inoremap <down> <Esc>:m .+1<CR>==gi
inoremap <up> <Esc>:m .-2<CR>==gi

vnoremap <down> :m '>+1<CR>gv=gv
vnoremap <up> :m '<-2<CR>gv=gv

" custom set
set noimd
set imi=1
set ims=-1

set nu
set ts=4
set sts=4
set shiftwidth=4

set showmatch

if has("syntax")
	syntax on
endif

set hlsearch

set laststatus=2

set autowrite
set autoread

set cindent
set bs=eol,start,indent
set history=256
set paste
set cursorline

" incoding korea
if $LANG[0]=='k' && $LANG[1]=='o'
	set fileencoding=korea
endif

" compile
map <F5> :call CompileRun()<CR>
imap <F5> <Esc>:call CompileRun()<CR>
vmap <F5> <Esc>:call CompileRun()<CR>

func! CompileRun()
exec "w"
if &filetype == 'c'
    exec "!gcc % -o %<"
    exec "!time ./%<"
elseif &filetype == 'cpp'
    exec "!g++ % -o %<"
    exec "!time ./%<"
elseif &filetype == 'java'
    exec "!javac %"
    exec "!time java %"
elseif &filetype == 'sh'
    exec "!time bash %"
elseif &filetype == 'python'
    exec "!time python3 %"
elseif &filetype == 'html'
    exec "!google-chrome % &"
elseif &filetype == 'go'
    exec "!go build %<"
    exec "!time go run %"
elseif &filetype == 'matlab'
    exec "!time octave %"
endif
endfunc

" font
if has("mac") || has("macunix")
    set gfn=IBM\ Plex\ Mono:h14,Hack:h14,Source\ Code\ Pro:h15,Menlo:h15
elseif has("win16") || has("win32")
    set gfn=IBM\ Plex\ Mono:h14,Source\ Code\ Pro:h12,Bitstream\ Vera\ Sans\ Mono:h11
elseif has("gui_gtk2")
    set gfn=IBM\ Plex\ Mono\ 14,:Hack\ 14,Source\ Code\ Pro\ 12,Bitstream\ Vera\ Sans\ Mono\ 11
elseif has("linux")
    set gfn=IBM\ Plex\ Mono\ 14,:Hack\ 14,Source\ Code\ Pro\ 12,Bitstream\ Vera\ Sans\ Mono\ 11
elseif has("unix")
    set gfn=Monospace\ 11
endif
